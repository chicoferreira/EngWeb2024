const http = require('http');
const fs = require('fs');
const url = require('url');
const axios = require('axios');

function getOcorrencias(ocorrencias) {
    let ocorrencias_html = '';
    for (let i = 0; i < ocorrencias.length; i++) {
        ocorrencias_html += `<tr>
            <td><a href="/ocorrencias/${ocorrencias[i].id}">${ocorrencias[i].id}</a></td>
            <td>${ocorrencias[i].bite_date}</td>
            <td>${ocorrencias[i].speciesIdDesc}</td>
        </tr>`;
    }
    return `
<!DOCTYPE html>
<html lang="pt">

<head>
    <title>Lista de Ocorrências</title>
    <meta charset="utf-8">
    <link rel="stylesheet" href="w3.css">
</head>

<body>
<div class="w3-card-4">
    <div class="w3-container w3-blue">
        <h1>Mordidas de Animais</h1>
    </div>
    <div class="w3-container">
        <table class="w3-table">
            <tr>
                <th>Identificador</th>
                <th>Data de Ocorrência</th>
                <th>Animal</th>
            </tr>
            ${ocorrencias_html}
        </table>
    </div>
    <footer class="w3-container w3-blue">
        <h5>Generated by EngWeb2024</h5>
    </footer>

</div>
</body>

</html>`
}

function genOcorrencia(ocorr) {
    return `
<!DOCTYPE html>
<html lang="pt">

<head>
    <title>Ocorrência ${ocorr.id}</title>
    <meta charset="utf-8">
    <link rel="stylesheet" href="/w3.css">
</head>

<body>
<div class="w3-card-4">
    <div class="w3-container w3-blue">
        <h1>Mordidas de Animais</h1>
    </div>
    <div class="w3-container">
        <pre>
             ${JSON.stringify(ocorr)}
        </pre>
    </div>
    <footer class="w3-container w3-blue">
        <h5>Generated by EngWeb2024 <a href="/ocorrencias">Voltar</a></h5>
    </footer>

</div>
</body>

</html>`
}

http.createServer(function (req, res) {
    const q = url.parse(req.url, true);
    const filename = q.pathname;

    const regex = /\/ocorrencias\/[a-z0-9]{4}/;

    console.log("'" + filename + "'")
    console.log(regex.test(filename))

    if (filename === '/') {
        fs.readFile('principal.html', function (err, data) {
            res.writeHead(200, {'Content-Type': 'text/html'});
            res.write(data);
            return res.end();
        });
    } else if (filename === '/w3.css') {
        fs.readFile('w3.css', function (err, data) {
            res.writeHead(200, {'Content-Type': 'text/css'});
            res.write(data);
            return res.end();
        });
    } else if (filename === '/ocorrencias') {
        axios.get('http://localhost:3000/ocorrencias')
            .then(response => {
                res.writeHead(200, {'Content-Type': 'text/html'});
                res.write(getOcorrencias(response.data));
                return res.end();
            })
            .catch(_error => {
                res.writeHead(500, {'Content-Type': 'text/html'});
                res.write("Erro ao acessar o servidor");
                return res.end();
            });
    } else if (regex.test(filename)) {
        axios.get('http://localhost:3000' + filename)
            .then(response => {
                res.writeHead(200, {'Content-Type': 'text/html'});
                res.write(genOcorrencia(response.data));
                return res.end();
            })
            .catch(_error => {
                res.writeHead(500, {'Content-Type': 'text/html'});
                res.write("Erro ao acessar o servidor");
                return res.end();
            });
    } else {
        res.writeHead(404, {'Content-Type': 'text/html'});
        return res.end("404 Not Found");
    }
}).listen(7777);